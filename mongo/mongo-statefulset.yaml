apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
  labels:
    app: mongodb
spec:
  serviceName: mongodb-service
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
      #app: microservices
  template:
    metadata:
      labels:
        #app: microservices
        app: mongodb
        #selector: mongodb-stateful
    spec:
      containers:
      - name: mongodb-container
        image: mongo:3
        ports:
          - containerPort: 27017
        env:
          - name: MONGO_INITDB_ROOT_USERNAME_FILE
            value: /etc/credentials/MONGO_ROOT_USERNAME
          - name: MONGO_INITDB_ROOT_PASSWORD_FILE
            value: /etc/credentials/MONGO_ROOT_PASSWORD
        volumeMounts:
        - name: mongodb-secret
          mountPath: /etc/credentials
          readOnly: true
        - name: mongodb-configmap
          mountPath: /config
          readOnly: true
        - name: mongodb-pvc
          mountPath: /data/db
      volumes:
      - name: mongodb-secret
        secret:
          secretName: mongodb-secret
          #items:
          #- key: MONGO_ROOT_USERNAME
          #  path: MONGO_ROOT_USERNAME
          #  mode: 0444
          #- key: MONGO_ROOT_PASSWORD
          #  path: MONGO_ROOT_PASSWORD
          #  mode: 0444
      - name: mongodb-configmap
        configMap:
          name: mongodb-configmap
          #items:
          #- key: mongo.conf
          #  path: mongo.conf
      - name: mongodb-pvc
        persistentVolumeClaim:
          claimName: mongodb-pvc
  volumeClaimTemplates:
    - metadata:
        name: mongodb-pvc
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi